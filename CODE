#include <ESP8266WiFi.h>
#include <ThingSpeak.h>

#define MIC_PIN A0       // Microphone sensor connected to A0
#define THRESHOLD 600    // Snoring detection threshold

const char* WIFI_SSID = "Easitronics";          // Replace with your WiFi name
const char* WIFI_PASSWORD = "123456789";        // Replace with your WiFi password
const unsigned long THINGSPEAK_CHANNEL_ID = 2860793;  // Replace with your ThingSpeak Channel ID
const char* THINGSPEAK_API_KEY = "QT06TGFH0R5A5P9E";  // Replace with your API Key

WiFiClient client;
int snoreCount = 0;          // Snore counter
unsigned long lastUpdateTime = 0;  // Last ThingSpeak update time

void setup() {
  Serial.begin(115200);
  pinMode(MIC_PIN, INPUT);

  Serial.println("Connecting to WiFi...");
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }

  Serial.println("\nWiFi Connected!");
  ThingSpeak.begin(client);  // Initialize ThingSpeak
}

void loop() {
  int soundLevel = analogRead(MIC_PIN);  // Read microphone data

  if (soundLevel > THRESHOLD) {  // Snoring detected
    snoreCount++;  // Increase snore count
    Serial.print("Snoring Detected! Count: ");
    Serial.println(snoreCount);
    delay(1000);  // Prevent multiple detections of the same snore
  }

  // Send data to ThingSpeak every 15 seconds
  if (millis() - lastUpdateTime >= 15000) {
    Serial.println("Sending data to ThingSpeak...");

    ThingSpeak.setField(1, snoreCount);  // Send snore count
    ThingSpeak.setField(2, soundLevel);  // Send sound level

    int response = ThingSpeak.writeFields(THINGSPEAK_CHANNEL_ID, THINGSPEAK_API_KEY);
    
    if (response == 200) {
      Serial.println("Data sent to ThingSpeak successfully!");
    } else {
      Serial.print("Error sending data. Response: ");
      Serial.println(response);
    }

    lastUpdateTime = millis();  // Update last sent time
  }
}
